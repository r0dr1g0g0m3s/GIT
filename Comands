Curso de Git e Github COMPLETO 2023 [Iniciantes] + Desafios + Muita Prática
https://www.youtube.com/watch?v=kB5e-gTAl_s

winget install --id Git.Git -e --source winget
(https://git-scm.com/download/win)

Open git bash here
(abrir terminal do git clicando com botão direito dentro da pasta onde ficarão os arquivos utilizados para atualizar o repositório)

git init
(criação de um arquivo git que controla a versão das modificações de outros arquivos)
(untraked files - arquivos que não estão no controle de versão)

git clone ssh://...
(clonar o repositório da branch master)

git clone -b nome_da_branch url_do_repositorio
(clonar um repositório da branch secundária)

git status
(ver quais arquivos tem dentro da pasta do git)

git add ""nome do arquivo""
(incluindo arquivo no controle de versão)

git add . 
(Incluindo todos os arquivos da pasta ao controle de versões do git)

git commit -m "commit inicial"
(Dando nome a versão. Commit são versões do código)

git reset --hard HEAD~1
(cancelar o último commit feito, mas que não passou no push.)

git config --global user.email rodrigo.study01@gmail.com
(inserir o mesmo e-mail utilizado no github)

git config --global user.name "Rodrigo R Gomes"
(comando para que seu nome apareça no controle das versões que vocâ alterar)

 git remote add origin https://github.com/r0dr1g0g0m3s/project1/tree/master
(adicionar o reposório que irá utilizar)

git restore .
(remover modificação  realizada, mas que ainda não foi 

get remote rm origin
(caso tenha adicionado o endereço errado do reposório)

git push --set-upstream origin master

git push
(quando for atualizar/adicionar os arquivos locais no repositório)

#git reflog
(ver todas as versões das modificações e suas IDs)

#git reset -hard "ID"
(Tornar/voltar/atualizar o arquivo para a versão da ID)


#OBS: Sempre que alterar um arquivo utilize a sequencia abaixo:

Git status
Git add .
Git commit -m "descreva a alteração"
git push


#merge
git merge secundaria  (tenha certeza que estas na branch master e deseja copiar tudo da branch secundaria antes de executar)
(Soma de branchs)

Branch(galho - caminhos diferentes)

#Criando uma branch
git branch "name"

#Listando as branchs
git branch

#Acessando uma branch
git checkout "name"

#Criando chave ssh
ssh-keygen -C "seu e-mail"

#Baixar a branch master
git clone ssh://endereçodorepositorio

#Clonar o último commit da brancha secundária homologacao do repositório sisarma.git hospedado em desenv.tjms.jus.br.
git clone --depth 1 ssh://enderecodorepositorio -b secundaria

baixar a branch master + a secundária
git clone -b nomedabranchsecundaria ssh://endereçodorepositorio

#caso tenha baixado somente a branch master:
git checkout -b nomedabranchsecundaria origin/nomedabranchsecundaria
#Isso criará uma nova branch local chamada nomedabranchsecundaria e a configurará para acompanhar a branch remota nomedabranchsecundaria. Isso basicamente trará a branch secundária do repositório remoto para o seu repositório local.

#descobrindo hash dos últimos commits
 git log --decorate --oneline --graph --all

