Curso de Git e Github COMPLETO 2023 [Iniciantes] + Desafios + Muita Prática
https://www.youtube.com/watch?v=kB5e-gTAl_s



INSTALANDO O GIT NO NO PC

winget install --id Git.Git -e --source winget
(https://git-scm.com/download/win)


CONFIGURANDO O GIT NO PC

Open git bash here
(abrir terminal do git clicando com botão direito dentro da pasta onde ficarão os arquivos utilizados para atualizar o repositório)

git init
(criação de um arquivo git que controla a versão das modificações de outros arquivos)
(untraked files - arquivos que não estão no controle de versão - Esse arquivo fica oculto na pasta onde você o criou)

git status
(ver quais arquivos tem dentro da pasta do git)

git add ""nome do arquivo""
(incluindo arquivo no controle de versão)

git add . 
(Incluindo todos os arquivos da pasta ao controle de versões do git)


git commit -m "commit inicial"
(Dando nome a versão. Commit são versões do código

git config --global user.email rodrigo.study01@gmail.com
(inserir o mesmo e-mail utilizado no github)

git config --global user.name "Rodrigo R Gomes"
(comando para que seu nome apareça no controle das versões que vocâ alterar)

 git remote add origin https://github.com/r0dr1g0g0m3s/project1/tree/master
(adicionar o reposório que irá utilizar)

get remote rm origin
(caso tenha adicionado o endereço errado do reposório)

git push --set-upstream origin master

git push
(quando for atualizar/adicionar os arquivos locais no repositório)

git reflog
(ver todas as versões das modificações e suas IDs)

git reset -hard "ID"
(Tornar/voltar/atualizar o arquivo para a versão da ID)


OBS: Sempre que alterar um arquivo utilize a sequencia abaixo:

Git status
Git add .
Git commit -m "descreva a alteração"
git push


March 
(Soma de branchs)

Branch(galho - caminhos diferentes)

Criando uma branch
git branch "name"

Listando as branchs
git branch

Acessando uma branch
git checkout "name"


ATUALIZANDO A BRANCH PRINCIPAL COM AS ATUALIZAÇÕES DA SECUNDÁRIA

git pull
git branch
git checkout "second"
git pull
git checkout master
git merch "second"
git push


CRIANDO UMA BRANCH COM BASE EM UMA JÁ EXISTENTE

git checkout -b "nome da branche nova" "nome da branch a ser copiada"


PULL REQUEST (UM MERGE DEMOCRÁTICO TEM QUE SER APROVADO)

Direto na plataforma do GITHUB


GIT IGNORE (EXCLUINDO DO CONTROLE DE VERSÃO)

touch .gitignore
(Cria o arquivo .gitignore)
Crie uma pasta onde você não deseja que os arquivos dentro dela sejam conhecidos ou atualizados no repositório.
Depois entre dentro desse arquivo e escreva la dentro a pasta que você quer que seja ignorada pelos comandos "git status ou git add . (por exemplo: segredos/)
git commit -m "nome da alteração"


CERTIFICADO / KEY SSH

ssh-keygen -t rsa -b rodrigo "rodrigo.study01@gmail.com"
eval $(ssh-agent -s)
ssh-add ~/.ssh/rodrigo
cat ~/.ssh/rodrigo.pub (copie a chave)
git config --global gpg.format ssh
git config --global user.signinkey 'DIGITE SUA CHAVE PÚBLICA ENTRE ASPAS SIMPLES'
git config --global commit.gpgsign true
git config --global ctag.gogsign true
eval "$(ssh-agent -s)"

touch "teste"
git clone git@github.com:r0dr1g0g0m3s/Docker.git
git add .
git commit -m "teste"
git touch








